/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "RazerSDK.h"


// Define S3E_EXT_SKIP_LOADER_CALL_LOCK on the user-side to skip LoaderCallStart/LoaderCallDone()-entry.
// e.g. in s3eNUI this is used for generic user-side IwUI-based implementation.
#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
#if (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP)) || defined I3D_ARCH_NACLX86_64
// For platforms missing stack-switching (WP8, NaCl, etc.) make loader-entry via LoaderCallStart/LoaderCallDone() on the user-side.
#define LOADER_CALL_LOCK
#endif
#endif


#include "RazerSDK_interface.h"

static RazerSDKFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0xffce9cab, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: RazerSDK");

        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0xffce9cab, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool RazerSDKAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

int Plugin_getAxis(int deviceId, int axis)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[0] func: Plugin_getAxis"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_getAxis);
#endif

    int ret = g_Ext.m_Plugin_getAxis(deviceId, axis);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_getAxis);
#endif

    return ret;
}

bool Plugin_isPressed(int deviceId, int keyCode)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[1] func: Plugin_isPressed"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_isPressed);
#endif

    bool ret = g_Ext.m_Plugin_isPressed(deviceId, keyCode);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_isPressed);
#endif

    return ret;
}

bool Plugin_isPressedDown(int deviceId, int keyCode)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[2] func: Plugin_isPressedDown"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_isPressedDown);
#endif

    bool ret = g_Ext.m_Plugin_isPressedDown(deviceId, keyCode);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_isPressedDown);
#endif

    return ret;
}

bool Plugin_isPressedUp(int deviceId, int keyCode)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[3] func: Plugin_isPressedUp"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_isPressedUp);
#endif

    bool ret = g_Ext.m_Plugin_isPressedUp(deviceId, keyCode);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_isPressedUp);
#endif

    return ret;
}

void Plugin_clearButtonStates()
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[4] func: Plugin_clearButtonStates"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_clearButtonStates);
#endif

    g_Ext.m_Plugin_clearButtonStates();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_clearButtonStates);
#endif

    return;
}

const char* Plugin_getDeviceName(int playerNum)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[5] func: Plugin_getDeviceName"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_getDeviceName);
#endif

    const char* ret = g_Ext.m_Plugin_getDeviceName(playerNum);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_getDeviceName);
#endif

    return ret;
}

void Plugin_initPlugin(const char* secretApiKey, s3eCallback onSuccess, s3eCallback onFailure)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[6] func: Plugin_initPlugin"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_initPlugin);
#endif

    g_Ext.m_Plugin_initPlugin(secretApiKey, onSuccess, onFailure);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_initPlugin);
#endif

    return;
}

void Plugin_requestGamerInfo(s3eCallback onSuccess, s3eCallback onFailure, s3eCallback onCancel)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[7] func: Plugin_requestGamerInfo"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_requestGamerInfo);
#endif

    g_Ext.m_Plugin_requestGamerInfo(onSuccess, onFailure, onCancel);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_requestGamerInfo);
#endif

    return;
}

void Plugin_requestProducts(const char* productsJson, s3eCallback onSuccess, s3eCallback onFailure, s3eCallback onCancel)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[8] func: Plugin_requestProducts"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_requestProducts);
#endif

    g_Ext.m_Plugin_requestProducts(productsJson, onSuccess, onFailure, onCancel);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_requestProducts);
#endif

    return;
}

void Plugin_requestPurchase(const char* purchasable, const char* productType, s3eCallback onSuccess, s3eCallback onFailure, s3eCallback onCancel)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[9] func: Plugin_requestPurchase"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_requestPurchase);
#endif

    g_Ext.m_Plugin_requestPurchase(purchasable, productType, onSuccess, onFailure, onCancel);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_requestPurchase);
#endif

    return;
}

void Plugin_requestReceipts(s3eCallback onSuccess, s3eCallback onFailure, s3eCallback onCancel)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[10] func: Plugin_requestReceipts"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_requestReceipts);
#endif

    g_Ext.m_Plugin_requestReceipts(onSuccess, onFailure, onCancel);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_requestReceipts);
#endif

    return;
}

void Plugin_shutdown(s3eCallback onSuccess, s3eCallback onFailure, s3eCallback onCancel)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[11] func: Plugin_shutdown"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_shutdown);
#endif

    g_Ext.m_Plugin_shutdown(onSuccess, onFailure, onCancel);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_shutdown);
#endif

    return;
}

int Plugin_JSONObject_Construct()
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[12] func: Plugin_JSONObject_Construct"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONObject_Construct);
#endif

    int ret = g_Ext.m_Plugin_JSONObject_Construct();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONObject_Construct);
#endif

    return ret;
}

void Plugin_JSONObject_Put(int jsonObject, const char* name, const char* value)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[13] func: Plugin_JSONObject_Put"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONObject_Put);
#endif

    g_Ext.m_Plugin_JSONObject_Put(jsonObject, name, value);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONObject_Put);
#endif

    return;
}

const char* Plugin_JSONObject_ToString(int jsonObject)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[14] func: Plugin_JSONObject_ToString"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONObject_ToString);
#endif

    const char* ret = g_Ext.m_Plugin_JSONObject_ToString(jsonObject);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONObject_ToString);
#endif

    return ret;
}

int Plugin_JSONArray_Construct()
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[15] func: Plugin_JSONArray_Construct"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONArray_Construct);
#endif

    int ret = g_Ext.m_Plugin_JSONArray_Construct();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONArray_Construct);
#endif

    return ret;
}

void Plugin_JSONArray_Put(int jsonArray, int index, int jsonObject)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[16] func: Plugin_JSONArray_Put"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONArray_Put);
#endif

    g_Ext.m_Plugin_JSONArray_Put(jsonArray, index, jsonObject);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONArray_Put);
#endif

    return;
}

void Plugin_JSONArray_PutString(int jsonArray, int index, const char* item)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[17] func: Plugin_JSONArray_PutString"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONArray_PutString);
#endif

    g_Ext.m_Plugin_JSONArray_PutString(jsonArray, index, item);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONArray_PutString);
#endif

    return;
}

const char* Plugin_JSONArray_ToString(int jsonArray)
{
    IwTrace(RAZERSDK_VERBOSE, ("calling RazerSDK[18] func: Plugin_JSONArray_ToString"));

    if (!_extLoad())
        return false;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONArray_ToString);
#endif

    const char* ret = g_Ext.m_Plugin_JSONArray_ToString(jsonArray);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_Plugin_JSONArray_ToString);
#endif

    return ret;
}
