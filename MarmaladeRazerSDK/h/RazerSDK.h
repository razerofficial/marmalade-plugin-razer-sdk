/*
 * (C) 2001-2012 Marmalade. All Rights Reserved.
 *
 * This document is protected by copyright, and contains information
 * proprietary to Marmalade.
 *
 * This file consists of source code released by Marmalade under
 * the terms of the accompanying End User License Agreement (EULA).
 * Please do not use this program/source code before you have read the
 * EULA and have agreed to be bound by its terms.
 */
/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */
#ifndef S3E_EXT_RAZERSDK_H
#define S3E_EXT_RAZERSDK_H

#include <s3eTypes.h>

#include <algorithm>
#include <string>
#include <vector>

typedef enum s3eRazerSdkFnCallbackType {
	S3E_RAZERSDK_CALLBACKS_INIT_PLUGIN_ON_SUCCESS,
	S3E_RAZERSDK_CALLBACKS_INIT_PLUGIN_ON_FAILURE,
	S3E_RAZERSDK_CALLBACKS_REQUEST_GAMER_INFO_ON_SUCCESS,
	S3E_RAZERSDK_CALLBACKS_REQUEST_GAMER_INFO_ON_FAILURE,
	S3E_RAZERSDK_CALLBACKS_REQUEST_GAMER_INFO_ON_CANCEL,    
	S3E_RAZERSDK_CALLBACKS_REQUEST_PRODUCTS_ON_SUCCESS,
	S3E_RAZERSDK_CALLBACKS_REQUEST_PRODUCTS_ON_FAILURE,
	S3E_RAZERSDK_CALLBACKS_REQUEST_PRODUCTS_ON_CANCEL,
	S3E_RAZERSDK_CALLBACKS_REQUEST_PURCHASE_ON_SUCCESS,
	S3E_RAZERSDK_CALLBACKS_REQUEST_PURCHASE_ON_FAILURE,
	S3E_RAZERSDK_CALLBACKS_REQUEST_PURCHASE_ON_CANCEL,
	S3E_RAZERSDK_CALLBACKS_REQUEST_RECEIPTS_ON_SUCCESS,
	S3E_RAZERSDK_CALLBACKS_REQUEST_RECEIPTS_ON_FAILURE,
	S3E_RAZERSDK_CALLBACKS_REQUEST_RECEIPTS_ON_CANCEL,
	S3E_RAZERSDK_CALLBACKS_SHUTDOWN_ON_SUCCESS,
	S3E_RAZERSDK_CALLBACKS_SHUTDOWN_ON_FAILURE,
	S3E_RAZERSDK_CALLBACKS_SHUTDOWN_ON_CANCEL,
	S3E_RAZERSDK_CALLBACKS_MAX
} s3eRazerSdkFnCallbackType;
// \cond HIDDEN_DEFINES
S3E_BEGIN_C_DECL
// \endcond

/**
 * Report if the RazerSDK extension is available.
 * @return S3E_TRUE if the RazerSDK extension is available. S3E_FALSE otherwise.
 */
s3eBool RazerSDKAvailable();

int Plugin_getAxis(int deviceId, int axis);

bool Plugin_isPressed(int deviceId, int keyCode);

bool Plugin_isPressedDown(int deviceId, int keyCode);

bool Plugin_isPressedUp(int deviceId, int keyCode);

void Plugin_clearButtonStates();

const char* Plugin_getDeviceName(int playerNum);

void Plugin_initPlugin(const char* secretApiKey, s3eCallback onSuccess, s3eCallback onFailure);

void Plugin_requestGamerInfo(s3eCallback onSuccess, s3eCallback onFailure, s3eCallback onCancel);

void Plugin_requestProducts(const char* productsJson, s3eCallback onSuccess, s3eCallback onFailure, s3eCallback onCancel);

void Plugin_requestPurchase(const char* purchasable, const char* productType, s3eCallback onSuccess, s3eCallback onFailure, s3eCallback onCancel);

void Plugin_requestReceipts(s3eCallback onSuccess, s3eCallback onFailure, s3eCallback onCancel);

void Plugin_shutdown(s3eCallback onSuccess, s3eCallback onFailure, s3eCallback onCancel);

int Plugin_JSONObject_Construct();

void Plugin_JSONObject_Put(int jsonObject, const char* name, const char* value);

const char* Plugin_JSONObject_ToString(int jsonObject);

int Plugin_JSONArray_Construct();

void Plugin_JSONArray_Put(int jsonArray, int index, int jsonObject);

void Plugin_JSONArray_PutString(int jsonArray, int index, const char* item);

const char* Plugin_JSONArray_ToString(int jsonArray);

// \cond HIDDEN_DEFINES
S3E_END_C_DECL
// \endcond

#endif /* !S3E_EXT_RAZERSDK_H */
